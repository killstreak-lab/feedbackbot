from asyncio import create_task, sleep
from aiogram import Dispatcher, types
from aiogram.types import ContentType, Message, ParseMode

from blocklists import banned, shadowbanned
from db import *

async def _send_expiring_notification(message: types.Message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç "—Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–µ–µ—Å—è" —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ

    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–∫–∏
    """
    telegram_id = message.from_user.id
    first_name = message.from_user.first_name
    username = message.from_user.username
    await DATABASE.save_user(telegram_id, first_name, username)
    remove_sent_confirmation = message.bot.get("remove_sent_confirmation")
    msg = await message.reply("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    if remove_sent_confirmation:
        await sleep(5.0)
        await msg.delete()


async def text_message(message: types.Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–¥–º–∏–Ω–∞(-–æ–≤)
    """
    telegram_id = message.from_user.id
    first_name = message.from_user.first_name
    username = message.from_user.username
    await DATABASE.save_user(telegram_id, first_name, username)
    if len(message.text) > 4000:
        return await message.reply("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–ª–∏–Ω–∞ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ä–∞–∑–º–µ—Ä. "
                                   "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏ —Å–≤–æ—é –º—ã—Å–ª—å –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
    admin_chat_id = message.bot.get("admin_chat_id")

    if message.from_user.id in banned:
        await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç—ã –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ—Ä–æ–º –±–æ—Ç–∞ –∏ —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã.")
    elif message.from_user.id in shadowbanned:
        return
    else:
        await message.bot.send_message(
            admin_chat_id, f"<b>#–°–æ–æ–±—â–µ–Ω–∏–µ</b> <a href='tg://user?id={telegram_id}'>{first_name}</a>:\n\n{message.html_text}\n\n#id{message.from_user.id}", parse_mode="HTML"
        )
        await create_task(_send_expiring_notification(message))


async def supported_media(message: types.Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–∏–ø—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å—å (–ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–º. –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–µ –≤–Ω–∏–∑—É)

    :param message: –º–µ–¥–∏–∞—Ñ–∞–π–ª –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    telegram_id = message.from_user.id
    if not User.select().where(User.telegram_id == telegram_id).exists():
        User.create(telegram_id=telegram_id)
    if message.caption and len(message.caption) > 1000:
        return await message.reply("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–ª–∏–Ω–∞ –ø–æ–¥–ø–∏—Å–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ä–∞–∑–º–µ—Ä. "
                                   "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏ —Å–≤–æ—é –º—ã—Å–ª—å –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
    admin_chat_id = message.bot.get("admin_chat_id")
    await message.copy_to(admin_chat_id,
                          caption=((message.caption or "") + f"\n\n#id{message.from_user.id}"),
                          parse_mode="HTML")
    await create_task(_send_expiring_notification(message))


async def unsupported_types(message: types.Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π, —Ç.–µ. —Ç–µ, –∫ –∫–æ—Ç–æ—Ä—ã–º –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å—å

    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    telegram_id = message.from_user.id
    first_name = message.from_user.first_name
    username = message.from_user.username
    await DATABASE.save_user(telegram_id, first_name, username)
    if message.content_type not in (
            ContentType.NEW_CHAT_MEMBERS, ContentType.LEFT_CHAT_MEMBER, ContentType.VOICE_CHAT_STARTED,
            ContentType.VOICE_CHAT_ENDED, ContentType.VOICE_CHAT_PARTICIPANTS_INVITED,
            ContentType.MESSAGE_AUTO_DELETE_TIMER_CHANGED, ContentType.NEW_CHAT_PHOTO, ContentType.DELETE_CHAT_PHOTO,
            ContentType.SUCCESSFUL_PAYMENT, ContentType.PROXIMITY_ALERT_TRIGGERED,
            ContentType.NEW_CHAT_TITLE, ContentType.PINNED_MESSAGE):
        await message.reply("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ—Ç —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è "
                            "–¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –û—Ç–ø—Ä–∞–≤—å —á—Ç–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–µ.")


async def cmd_help_user(message: types.Message):
    """
    –°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–º–∞–Ω–¥–æ–π /help
    """
    telegram_id = message.from_user.id
    first_name = message.from_user.first_name
    username = message.from_user.username
    await DATABASE.save_user(telegram_id, first_name, username)
    await message.answer(
        "–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —Ç—ã –º–æ–∂–µ—à—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º @Lifeinsomniaaa (t.me/+Fz0pEJNfkyI4YTcy).\n"
        "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –ø–æ—á—Ç–∏ –≤—Å–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π, –∞ –∏–º–µ–Ω–Ω–æ: —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, —Ñ–∞–π–ª—ã –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")


async def cmd_start_user(message: types.Message):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    """
    telegram_id = message.from_user.id
    first_name = message.from_user.first_name
    username = message.from_user.username
    user_link = f"<a href='tg://user?id={telegram_id}'>{first_name}</a>"

    if await DATABASE.save_user(telegram_id, first_name, username):
        admin_chat_id = message.bot.get("admin_chat_id")
        await message.bot.send_message(
            admin_chat_id, 
            text=f'üîî #–ù–æ–≤—ã–π–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n\n'
                f'<b>üë§ User:</b> {user_link}\n'
                f'<b>üÜî Telegram ID:</b> {telegram_id}\n'
                f'<b>üÜî Username:</b> {username}',
            parse_mode=ParseMode.HTML)
    
    await message.answer(
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_link}!\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –í–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
        parse_mode=ParseMode.HTML)

def register_usermode_handlers(dp: Dispatcher):
    dp.register_message_handler(cmd_start_user, commands="start")
    dp.register_message_handler(cmd_help_user, commands="help")
    dp.register_message_handler(text_message, content_types=ContentType.TEXT)
    dp.register_message_handler(supported_media, content_types=[
        ContentType.ANIMATION, ContentType.AUDIO, ContentType.PHOTO,
        ContentType.DOCUMENT, ContentType.VIDEO, ContentType.VOICE
    ])
    dp.register_message_handler(unsupported_types, content_types=ContentType.ANY)
